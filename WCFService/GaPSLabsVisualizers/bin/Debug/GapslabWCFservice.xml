<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GapslabWCFservice</name>
    </assembly>
    <members>
        <member name="T:GapslabWCFservice.MemberWCF">
            <summary>
            Defines an OpenstreetMaps Relation member. Refer to OpenstreetMaps wiki for more.
            </summary>
        </member>
        <member name="P:GapslabWCFservice.MemberWCF.RelationId">
            <summary>
            Gets or sets the relation id.
            </summary>
        </member>
        <member name="P:GapslabWCFservice.MemberWCF.ReferenceId">
            <summary>
            Gets or sets the referenced element id.
            </summary>
        </member>
        <member name="P:GapslabWCFservice.MemberWCF.Type">
            <summary>
            0 for Node, 1 for Way, 2 for Relation
            </summary>
        </member>
        <member name="P:GapslabWCFservice.MemberWCF.Role">
            <summary>
            Gets or sets the role of this member in the relation.
            </summary>
        </member>
        <member name="P:GapslabWCFservice.MemberWCF.order">
            <summary>
            Gets or sets the order of the member in the relation.
            </summary>
        </member>
        <member name="T:GapslabWCFservice.NamespaceDoc">
            <summary>
            The GaPSLabs Windows Communication Foundation Service Namespace
            </summary>
        </member>
        <member name="T:GapslabWCFservice.ServiceGapslabs">
            <summary>
            The main class for the GaPSLabs WCF Service. Any method inside this class with the [OperationContract]
            attribute will be available to the consumers. Please refer to .NET ServiceModel for details.
            </summary>
        </member>
        <member name="F:GapslabWCFservice.ServiceGapslabs.conn">
            <summary>
            A connection string to MSSQL. All methods in ServiceGapslabs class are required to receive a connection string.
            However, The methods can be modified in a way that they would use a global variable that is set at initialization.
            </summary>
        </member>
        <member name="F:GapslabWCFservice.ServiceGapslabs.connPostgre">
            <summary>
            A connection string to PostgreSql. All methods in ServiceGapslabs class are required to receive a connection string.
            However, The methods can be modified in a way that they would use a global variable that is set at initialization.
            </summary>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetRelationIds(System.String)">
            <summary>
            Gets all OSM relation ids from the database.
            Note: It may take a long time.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns array of Ids for the OSM Relations.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetRelationsContainingMembers(System.String,System.String[],System.Int32,System.String)">
            <summary>
            Gets the OSM relations that contain the provided members with criteria.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="memberIds">The ids of the member to look for</param>
            <param name="memberType">The type of the members to look for</param>
            <param name="memberRole">The role of the members to look for. Leave with an empty string to ignore.</param>
            <returns>Returns a list of relation ids</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetRelationMembers(System.String,System.String)">
            <summary>
            Gets the OSM relations based on a relation id.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="relationId">The relation id to be used in the search criteria.</param>
            <returns>Returns the list of OSM relations</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayIds(System.String)">
            <summary>
            Gets all the OSM way ids from the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns an array of way ids</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayIdsWithIdCriteria(System.String,System.String)">
            <summary>
            Gets an array of OSM way ids with the given criteria from the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="IdCriteria">The search criteria for the database. (Where clause)</param>
            <returns>Returns an array of way ids.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayIdsInStockholm(System.String)">
            <summary>
            Gets an array of all OSM way ids in Stockholm from the database.
            Note: You may develop your own methods to target the desired cities. 
            Alternatively, you can use <see cref="M:GapslabWCFservice.ServiceGapslabs.GetWayIdsWithIdCriteria(System.String,System.String)"/> to do the same without the need to write a new method.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns an array of way ids.</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetWayIdsWithIdCriteria(System.String,System.String)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayIdsInBound(System.String,GapslabWCFservice.BoundsWCF)">
            <summary>
            Gets the OSM way ids that are in the given bound from the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="bound">The area bounds in latitudes and longitudes.</param>
            <returns>Returns an array of way ids.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayIdsWithTags(System.String,GapslabWCFservice.BoundsWCF,System.String[][])">
            <summary>
            Gets the OSM way ids that are in the given bound from the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="bound">The area bounds in latitudes and longitudes.</param>
            <param name="tags">The key-value pair to look for.
            <para>Note: If even one of the tags match, the way is returned.</para></param>
            <returns>Returns an array of way ids.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayExtIdsInBound(System.String,GapslabWCFservice.BoundsWCF)">
            <summary>
            Get the extended way ids in the bound from way_ext table in the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="bound">The bound area in latitudes and longitudes.</param>
            <returns>Array of  (wayid, originalwayid)</returns>
            
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetNodeIdsInBoundWithInfo(System.String,GapslabWCFservice.BoundsWCF,System.String)">
            <summary>
            Gets all the OSM node ids in bound that match the mentioned OSM tag criteria.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="bound">The bound area in latitudes and longitudes.</param>
            <param name="infoTag">The tag criteria to match against the database.</param>
            <returns>Returns an array of node ids.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetNodeIdsInBoundWithKeyValueTag(System.String,GapslabWCFservice.BoundsWCF,System.String[][])">
            <summary>
            Gets all the OSM node ids in bound that match the mentioned OSM tag criteria.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="bound">The bound area in latitudes and longitudes.</param>
            <param name="infoTag">The tag pairs to match against.
            <para/><strong>Note:</strong> infoTag is a n by 2 array. 
            <para/>example: infoTag= new String[3][];
            <para/>infoTag[0]=new String[] {"bus", "yes"};</param>
            <returns>Returns an array of node ids.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetNodeInfo(System.String,System.String)">
            <summary>
            Gets the OSM node position from the database that matches the nodeid.
            <br/>If the node cannot be found then it returns null.
            </summary>
            <param name="nodeid">The id to search for.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns the node info.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayExtNodes(System.String,System.String)">
            <summary>
            Gets the extended way from way_ext table in the database.
            </summary>
            <param name="wayid">The id to match.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of nodes if found.
            <br/>Returns null if not found.</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetWayExtIdsInBound(System.String,GapslabWCFservice.BoundsWCF)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayNodes(System.String,System.String)">
            <summary>
            Gets the OSM way from the database with the matching wayid.
            </summary>
            <param name="wayid">The way id to find</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of nodes if found.
            <br/>Returns null if not found.</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetWayExtNodes(System.String,System.String)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetRelationTags(System.String,System.String)">
            <summary>
            Gets the OSM tags for a relation with the matching id from the database.
            </summary>
            <param name="relationid">The id of the relation</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns the list of tags.</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetWayTags(System.String,System.String)"/>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetNodeTags(System.String,System.String)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayTags(System.String,System.String)">
            <summary>
            Gets the OSM tags for a way with the matching id from the database.
            </summary>
            <param name="wayid">The id of the way</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns the list of tags.</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetNodeTags(System.String,System.String)"/>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetRelationTags(System.String,System.String)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetWayTagsStockholm(System.String,System.String)">
            <summary>
            Gets the OSM tags for a way in the Stockholm city with the matching id from the database.
            </summary>
            <param name="wayid">The id of the way</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of tags</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetWayTags(System.String,System.String)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetNodeTags(System.String,System.String)">
            <summary>
            Gets the OSM tags for a node with the matching id from the database.
            </summary>
            <param name="nodeid">The id of the node</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of tags</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetRelationTags(System.String,System.String)"/>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetWayTags(System.String,System.String)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetBounds(System.String)">
            <summary>
            Gets the global geo boundary of the OSM elements in the database.
            <br/><strong>Note:</strong>This is intended to be used when interpolating between coordinates of geolocations and visualization engines.
            <br/>The main reason is that most of the game engine worlds are coordinated around a single-precision float range, and given the fact
            that the accuracy of the floating numbers drop when they get large, we recommend that you place the geometries close to the origin,
             rather than their real position.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns the minimum and maximum latitude/longitudes</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetRoutePath(System.String,System.Int32,System.String)">
            <summary>
            Returns the list of nodes of a certain type in the route relation.
            </summary>
            <param name="routeId">The relation id of the route.</param>
            <param name="memberType">0 for node, 1 for way, 2 for relation</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of nodes.</returns>
        </member>
        <member name="F:GapslabWCFservice.ServiceGapslabs.router">
            <summary>
            An example router engine from OSMSharp package.
            Visit <a href="http://www.osmsharp.com">OsmSharp website</a> for more.
            </summary>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.InitializeRouter(System.String)">
            <summary>
            Initializes the example router.
            Visit <a href="http://www.osmsharp.com">OsmSharp website</a> for more.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns the success or error message.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.CheckRouter">
            <summary>
            Checks whether the example router is initializaed
            Visit <a href="http://www.osmsharp.com">OsmSharp website</a> for more.
            </summary>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.ResolvePoint(OsmSharp.Routing.VehicleEnum,GapslabWCFservice.OsmNodeWCF)">
            <summary>
            Resolves a point on the example router.
            Visit <a href="http://www.osmsharp.com">OsmSharp website</a> for more.
            </summary>
            <param name="vehicle">The type of vehicle</param>
            <param name="currentNode">The node to be resolved</param>
            <returns>Returns the resolved node.
            <br/>Returns null if the node cannot be resolved.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.RouteUsingDykstra(OsmSharp.Routing.VehicleEnum,GapslabWCFservice.OsmNodeWCF,GapslabWCFservice.OsmNodeWCF)">
            <summary>
            Performs a Dykstra routing on the example router.
            Visit <a href="http://www.osmsharp.com">OsmSharp website</a> for more.
            </summary>
            <param name="vehicle">The type of vehicle.</param>
            <param name="pointA">Starting point</param>
            <param name="pointB">Destination point</param>
            <returns>Returns the list of nodes for the route.
            <br/>Returns empty list if no route is found.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetGeometryCollectionSingleObject(System.String,System.Boolean,System.String)">
            <summary>
            Gets a <see cref="T:Aram.OSMParser.geometryCollection"/> from an object in the database matching the given id.
            </summary>
            <param name="id">The id to match against</param>
            <param name="includeLargeObject">If true, the returned geometryCollection will include the content of 
            largeObject byte array</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a geometryCollection</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetGeometryCollection(System.Boolean,System.String,System.String)"/>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetGeometryCollectionMinimal(System.String,System.String)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetGeometryCollection(System.Boolean,System.String,System.String)">
            <summary>
            Gets an array of <see cref="T:Aram.OSMParser.geometryCollection"/> from an object in the database matching the search criteria.
            </summary>
            <param name="includeLargeObject">If true, the returned geometryCollections will include the content of 
            largeObject byte array</param>
            <param name="SearchCriteriaWhereClause">The search criteria for the geometryCollection objects.
            Please take a look at geometryCollection table in the database for serach parameters.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns an array of geometryCollection</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetGeometryCollectionSingleObject(System.String,System.Boolean,System.String)"/>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetGeometryCollectionMinimal(System.String,System.String)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetGeometryCollectionMinimal(System.String,System.String)">
            <summary>
            Gets the ids of <see cref="T:Aram.OSMParser.geometryCollection"/> matching the search criteria in the database.
            </summary>
            <param name="SearchCriteriaWhereClause">The search criteria for the geometryCollection objects.
            Please take a look at geometryCollection table in the database for serach parameters.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns an array of ids.</returns>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetGeometryCollectionSingleObject(System.String,System.Boolean,System.String)"/>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.GetGeometryCollection(System.Boolean,System.String,System.String)"/>
        </member>
        <member name="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance">
            <summary>
            This is the static object for a single SUMO simulation scenario in Floating Car Data mode.
            </summary>
        </member>
        <member name="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList">
            <summary>
            This is the static object for a list of SUMO simulations in Floating Car Data mode.
            </summary>
        </member>
        <member name="F:GapslabWCFservice.ServiceGapslabs.SimulationLoaded">
            <summary>
            The boolean for the status of a loading simulation when using <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance"/>.
            </summary>
        </member>
        <member name="F:GapslabWCFservice.ServiceGapslabs.SimulationLoadedList">
            <summary>
            The list of booleans for the status of loading simulations when using <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/>.
            </summary>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.InitializeSimulationList">
            <summary>
            Initializes the simulation services.
            </summary>
            <seealso cref="M:GapslabWCFservice.ServiceGapslabs.DisposeSimulation(System.String)"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.DisposeSimulation(System.String)">
            <summary>
            Disposes a selected simulation.
            </summary>
            <param name="SimulationID">The simulation id to dispose.</param>
            <returns>True if the dispose is successful.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GenerateRandomID(System.String)">
            <summary>
            Gets generated a random id for a specific simulation.
            </summary>
            <param name="initial">Prefix of the id</param>
            <returns>Returns the generated id</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetTotalTimesteps">
            <summary>
            Gets the numbers of time steps available in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance"/>.
            </summary>
            <returns>Returns the number of time steps.</returns>
            <seealso cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetTotalTimestepsList(System.Int32)">
            <summary>
            Gets the numbers of time steps available for a simulation in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/> matching the given id.
            </summary>
            <param name="SimulationID">The id of the simulation</param>
            <returns>Returns the number of time steps.</returns>
            <seealso cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetTimestepAt(System.Int32)">
            <summary>
            Gets a time step at a specified index in time in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance"/>.
            </summary>
            <param name="index">The index of the time step.</param>
            <returns>Returns the TimeStep.</returns>
            <seealso cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetTimestepAtList(System.Int32,System.Int32)">
            <summary>
            Gets a time step at a specified index in time of a matching simulation id in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/>.
            </summary>
            <param name="index">The index of the time step.</param>
            <param name="SimulationID">The id of the simulation</param>
            <returns>Returns the TimeStep.</returns>
            <seealso cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetSimpleTimestepAtList(System.Int32,System.Int32)">
            <summary>
            Gets a time step at a specified index in time of a matching simulation id in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/>.
            </summary>
            <param name="index">The index of the time step.</param>
            <param name="SimulationID">The id of the simulation</param>
            <returns>Returns the SimpleTimeStep.</returns>
            <seealso cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetSimulationName">
            <summary>
            Gets the simulation name in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance"/>.
            </summary>
            <returns>Returns the simulation name.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetSimulationNameList(System.Int32)">
            <summary>
            Gets the simulation name, matching an id in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/>.
            </summary>
            <param name="SimulationID">The id of the simulation</param>
            <returns>Returns the simulation name.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetSimulationDescription">
            <summary>
            Gets the description of the simulation in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance"/>.
            </summary>
            <returns>Returns the description.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.GetSimulationDescriptionList(System.Int32)">
            <summary>
            Gets the description of the simulation, matching an id in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/>.
            </summary>
            <param name="SimulationID">The id of the simulation</param>
            <returns>Returns the description.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.IsSimulationLoaded">
            <summary>
            Gets whether the simulation is fully loaded in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance"/>.
            </summary>
            <returns>True if simulation loading is complete<br/>False otherwise.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.IsSimulationLoadedList(System.Int32)">
            <summary>
            Gets whether the simulation is fully loaded, matching an id in <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/>.
            </summary>
            <param name="SimulationID">The id of the simulation.</param>
            <returns>True if simulation loading is complete<br/>False otherwise.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.LoadSUMOFCDSimulation(System.String)">
            <summary>
            Starts loading of a simulation asynchronously, sets it to <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDInstance"/> and returns the simulation id immediately.
            </summary>
            <param name="filename">The simulation file to load in FCD format. Please refer to floating car data format.</param>
            <example>
            <code>
            LoadSUMOFCDSimulation("C:\\test.xml");
            while (!IsSimulationLoaded()){};
            var i=GetTotalTimeSteps();
            </code>
            </example>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.LoadSUMOFCDSimulationList(System.String,System.String)">
            <summary>
            Starts loading of a simulation asynchronously, adds it to <see cref="F:GapslabWCFservice.ServiceGapslabs.SUMOsimulationFCDList"/> and returns the simulation id immediately.
            </summary>
            <param name="ObjectIDPostfix">The postfix id for the loading objects.</param>
            <param name="filename">The simulation file to load in FCD format. Please refer to floating car data format.</param>
            <returns>Returns the id of the simulation.</returns>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.LoadSimulationListTask(System.Object)">
            <summary>
            
            </summary>
            <param name="parameters">parameters[0] should be filename, parameters[1] should be SimulationID</param>
        </member>
        <member name="M:GapslabWCFservice.ServiceGapslabs.LoadSimulationTask(System.Object)">
            <summary>
            
            </summary>
            <param name="filenamestring"></param>
        </member>
    </members>
</doc>
