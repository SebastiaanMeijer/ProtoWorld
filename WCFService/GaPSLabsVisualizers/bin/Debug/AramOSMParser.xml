<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AramOSMParser</name>
    </assembly>
    <members>
        <member name="T:Aram.OSMParser.Bounds">
            <summary>
            The boundary class that defines minimum and maximum latitude/longitude for a rectangular area.
            </summary>
        </member>
        <member name="M:Aram.OSMParser.Bounds.#ctor">
            <summary>
            The default constructor of Bounds class.
            </summary>
        </member>
        <member name="M:Aram.OSMParser.Bounds.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes the Bounds from the values retrieved from the bound element of an XML OSM format.
            </summary>
            <param name="boundBoxOsmElement">The bound element in the OSM XML.</param>
        </member>
        <member name="M:Aram.OSMParser.Bounds.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes the Bounds from the values retrieved from the bound element of an XML OSM format.
            </summary>
            <param name="boundBoxOsmElement">The bound element in the OSM XML.</param>
        </member>
        <member name="P:Aram.OSMParser.Bounds.minlat">
            <summary>
            Gets or sets the minimum latitude.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Bounds.minlon">
            <summary>
            Gets or sets the minimum longitude.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Bounds.maxlat">
            <summary>
            Gets or sets the maximum latitude.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Bounds.maxlon">
            <summary>
            Gets or sets the maximum longitude.
            </summary>
        </member>
        <member name="T:Aram.OSMParser.geometryCollection">
             <summary>
             The class responsible for reading and writing geometry data from/to the database. This class uses LargeObjects that is available in PostgreSQL.
             <br/>You may modify this class to match your own database if other than PostgreSQL.
             </summary>
             <remarks>
             This geometry_collection table in the database, stores the meta data regarding the large objects for the geometrical data.
             Note that the binary content of those objects are stored in largeobject table while only a reference to those objects is stored in this table.
             An example for such a record holds 3D geometry of buildings and roads in OBJ standard format.
             </remarks>
             <example>
             <code>
             var geometryRetrieval = geometryCollection.GetSingleObjectWithId("8", true, connPostGreSql);
            	// testing GeometryCollection
            	Aram.OSMParser.geometryCollection col = new Aram.OSMParser.geometryCollection();
            
             // col.gisId = 
             col.gisType = "dummy";
             col.format = "txt";
             col.largeObject = null;
             col.lastUpdate = DateTime.Now;
             col.latitude = 563213212;
             col.longitude = 171231231;
             col.name = "Test2";
              col.pivot = new Aram.OSMParser.Vector3() { x = 1f, y = 2f, z = 3f };
             col.version = new Aram.OSMParser.GaPSlabsVersion() { versionTitle = "development", major = 0, minor = 1 };
            
             col.AddGeometryCollectionToDatabase(connPostGreSql, false);
             var bytes = File.ReadAllBytes(@"C:\Users\admgaming\Documents\Visual Studio 2012\Projects\GaPSLabs\AramOSMParser\OsmParserTestApplication\bin\Debug\Npgsql.xml");
             col.largeObject = bytes;
             col.UpdateThisGeometryOnDatabase(connPostGreSql, true);
             var resultBytes = geometryCollection.GetLargeObject(col.largeObjectReference, connPostGreSql);
             File.WriteAllBytes("c:\\dummy", resultBytes);</code>
             </example>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.#ctor">
            <summary>
            The constructor for the geometry collection.
            </summary>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.AddGeometryCollectionToDatabase(System.String,System.Boolean)">
            <summary>
            Adds a new record to the geometry_collection table in the database from the current geometryCollection object.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="IncludeLargeObjectData">If true, it will store the largeObject with the actual data.</param>
            <remarks>In case you are want to add the meta information about an object and populate the actual data later,
            you may set <paramref name="IncludeLargeObjectData"/> to false.</remarks>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.DeleteThisGeometryFromDatabase(System.String,System.Boolean)">
            <summary>
            Deletes a geometry_collection record from the database. You can choose whether to delete the large object.
            WHERE 
            id=? AND name=? AND version_title=? AND major=? AND minor=? AND format=? AND large_object_reference=? AND 
            latitude=? AND longitude=? AND pivotx=? AND pivoty=? AND pivotz=? AND gis_id=? AND 
            gis_type=? AND last_update=?
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="deleteLargeObject">If true, it will delete the actual object from the database.</param>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.DeleteGeometryCollectionFromDatabase(System.String,System.String,System.Boolean)">
            <summary>
            Deletes a geometry_collection record from the database. You can choose whether to delete the large object.
            WHERE 
            id=? AND name=? AND version_title=? AND major=? AND minor=? AND format=? AND large_object_reference=? AND 
            latitude=? AND longitude=? AND pivotx=? AND pivoty=? AND pivotz=? AND gis_id=? AND 
            gis_type=? AND last_update=?
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="searchCriteria">This is the where clause of the query without the 'WHERE' keyword.</param>
            <param name="deleteLargeObject">If true, it will delete the actual objects from the database.</param>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.UpdateGeometryCollectionOnDatabase(System.String,System.String,System.String)">
            <summary>
            Updates a geometry_collection record on the database.
            UPDATE geometry_collection
            SET id=?, name=?, version_title=?, major=?, minor=?, format=?, large_object_reference=?, 
            latitude=?, longitude=?, pivotx=?, pivoty=?, pivotz=?, gis_id=?, 
            gis_type=?, last_update=?
            WHERE 
            id=? AND name=? AND version_title=? AND major=? AND minor=? AND format=? AND large_object_reference=? AND 
            latitude=? AND longitude=? AND pivotx=? AND pivoty=? AND pivotz=? AND gis_id=? AND 
            gis_type=? AND last_update=?
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="searchCriteria">This is the where clause of the query without the 'WHERE' keyword.</param>
            <param name="updateInstructions">This is the set clause of the query without the 'SET' keyword.</param>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.UpdateThisGeometryOnDatabase(System.String,System.Boolean)">
            <summary>
            Updates this geometry_collection record on the database.
            UPDATE geometry_collection
            SET id=?, name=?, version_title=?, major=?, minor=?, format=?, large_object_reference=?, 
            latitude=?, longitude=?, pivotx=?, pivoty=?, pivotz=?, gis_id=?, 
            gis_type=?, last_update=?
            WHERE 
            id= The current object id
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="updateLargeObject">If true, it will also update the actual object on the database.</param>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.GetSingleObjectWithId(System.String,System.Boolean,System.String)">
            <summary>
            Gets the geometry object with the matching id
            </summary>
            <param name="id">The id of the object in the geometry_collection table.</param>
            <param name="includeLargeObject">If true, it also gets the actual object data from the database.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns the geometry.</returns>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.GetObjectsWithIdAndCriteria(System.Boolean,System.String,System.String)">
            <summary>
            Gets an array of geometryCollection objects matching the given criteria.
            </summary>
            <param name="includeLargeObject">If true, it also gets the actual object data from the database.</param>
            <param name="whereClause">The matching criteria for the where clause of the database query.
            Please refer to geometry_collection table in the database for the definitions.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns an array of geometry collection.</returns>
            <seealso cref="M:Aram.OSMParser.geometryCollection.GetObjectsWithIdAndCriteriaMinimal(System.String,System.String)"/>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.GetObjectsWithIdAndCriteriaMinimal(System.String,System.String)">
            <summary>
            Gets an array of ids belonging to the geometry objects that match the given criteria.
            </summary>
            <param name="whereClause">The matching criteria for the where clause of the database query.
            Please refer to geometry_collection table in the database for the definitions.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns an array of geometry ids.</returns>
            <seealso cref="M:Aram.OSMParser.geometryCollection.GetObjectsWithIdAndCriteria(System.Boolean,System.String,System.String)"/>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.GetLargeObject(System.Int32,System.String)">
            <summary>
            Gets the large object content from the database for the given large object id.
            </summary>
            <param name="largeObjectId">The id of the largeobject.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns the content of the large object.</returns>
            <seealso cref="M:Aram.OSMParser.geometryCollection.CreateLargeObject(System.Byte[],System.String)"/>
            <seealso cref="M:Aram.OSMParser.geometryCollection.DeleteLargeObject(System.Int32,System.String)"/>
            <seealso cref="M:Aram.OSMParser.geometryCollection.UpdateLargeObject(System.Int32,System.Byte[],System.String)"/>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.CreateLargeObject(System.Byte[],System.String)">
            <summary>
            Creates a large object with the given data at the database and returns the id of that object.
            </summary>
            <param name="data">The data for the large object.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns the id of the large object at the database.</returns>
            <seealso cref="M:Aram.OSMParser.geometryCollection.GetLargeObject(System.Int32,System.String)"/>
            <seealso cref="M:Aram.OSMParser.geometryCollection.DeleteLargeObject(System.Int32,System.String)"/>
            <seealso cref="M:Aram.OSMParser.geometryCollection.UpdateLargeObject(System.Int32,System.Byte[],System.String)"/>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.DeleteLargeObject(System.Int32,System.String)">
            <summary>
            Deletes a large object matching the id from the database.
            </summary>
            <param name="largeObjectId">The id of the largeobject.</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <seealso cref="M:Aram.OSMParser.geometryCollection.CreateLargeObject(System.Byte[],System.String)"/>
            <seealso cref="M:Aram.OSMParser.geometryCollection.CreateLargeObject(System.Byte[],System.String)"/>
            <seealso cref="M:Aram.OSMParser.geometryCollection.UpdateLargeObject(System.Int32,System.Byte[],System.String)"/>
        </member>
        <member name="M:Aram.OSMParser.geometryCollection.UpdateLargeObject(System.Int32,System.Byte[],System.String)">
            <summary>
            Updates a large object on the databse with matching the id.
            </summary>
            <param name="largeObjectId">The id of the largeobject.</param>
            <param name="data">The updated data</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <seealso cref="M:Aram.OSMParser.geometryCollection.CreateLargeObject(System.Byte[],System.String)"/>
            <seealso cref="M:Aram.OSMParser.geometryCollection.DeleteLargeObject(System.Int32,System.String)"/>
            <seealso cref="M:Aram.OSMParser.geometryCollection.GetLargeObject(System.Int32,System.String)"/>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.id">
            <summary>
            Gets or sets the id of the geometry collection.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.name">
            <summary>
            Gets or sets the name of the geometry collection.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.version">
            <summary>
            Gets or sets the version of the geometry collection.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.format">
            <summary>
            Gets or set the format of the geometry collection.
            </summary>
            <example>
            <code>geometryCollection gem = new geometryCollection();
            gem.format = "collada";</code>
            </example>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <remarks>
            This is the latitude * 10 to the power 7.
            To get the float, divide this number by 10000000.
            That way, you'll get two digit of integers and 7 digits of fractional parts.
            For example if the latitude is 584118588 , then the real value will be 584118588 divided by 10^7 = 58.4118588
            </remarks>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <remarks>
            This is the longitude * 10 to the power 7.
            To get the float, divide this number by 10000000.
            That way, you'll get two digit of integers and 7 digits of fractional parts.
            For example if the longitude is 155880942 , then the real value will be 155880942 divided by 10^7 = 15.5880942
            </remarks>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.pivot">
            <summary>
            Gets or sets the pivot point of a 3d geometry.
            </summary>
            <remarks>
            This is the pivot point of the 3d geometry (if the format is a 3d geometry).
            It is where the object model should be loaded at 3d coordinates.
            </remarks>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.gisId">
            <summary>
            Gets or sets the gis id of the object.
            </summary>
            <remarks>
            If this object is referencing any gis element (ie, way, node etc in the openStreetmap),
            it can be stored here.
            </remarks>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.gisType">
            <summary>
            Gets or sets the gis element type, ie. way, node etc.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.lastUpdate">
            <summary>
            Gets or sets the Utc datetime.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.largeObject">
            <summary>
            Gets or sets the content of the actual object as an array of bytes.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.geometryCollection.largeObjectReference">
            <summary>
            Gets the reference id for the large object.
            </summary>
        </member>
        <member name="T:Aram.OSMParser.GaPSlabsVersion">
            <summary>
            A simple versioning class for the <see cref="T:Aram.OSMParser.geometryCollection"/> objects.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.GaPSlabsVersion.versionTitle">
            <summary>
            Gets or sets the version title.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.GaPSlabsVersion.major">
            <summary>
            Gets or sets the major revision number.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.GaPSlabsVersion.minor">
            <summary>
            Gets or sets the minor revision number.
            </summary>
        </member>
        <member name="T:Aram.OSMParser.DateTimeWithOffset">
            <summary>
            A datetime class with an offset.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.DateTimeWithOffset.dateTime">
            <summary>
            Gets or sets the datatime.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.DateTimeWithOffset.offset">
            <summary>
            Gets or sets the offset.
            </summary>
        </member>
        <member name="T:Aram.OSMParser.GaPSlabsTimeStamp">
            <summary>
            A datetime converter class between .NET datetime and postgresql datetime formats.
            </summary>
        </member>
        <member name="M:Aram.OSMParser.GaPSlabsTimeStamp.ToPostgreTimeStamp(System.DateTime)">
            <summary>
            Converts .NET <see cref="T:System.DateTime"/> to <see cref="T:NpgsqlTypes.NpgsqlTimeStamp"/> format.
            </summary>
            <param name="datetime">The .NET datetime to convert from.</param>
            <returns>Returns the datetime in <see cref="T:NpgsqlTypes.NpgsqlTimeStamp"/> format.</returns>
        </member>
        <member name="M:Aram.OSMParser.GaPSlabsTimeStamp.ToDateTime(NpgsqlTypes.NpgsqlTimeStamp)">
            <summary>
            Converts <see cref="T:NpgsqlTypes.NpgsqlTimeStamp"/> to .NET <see cref="T:System.DateTime"/> format.
            </summary>
            <param name="dt">The datetime to convert from.</param>
            <returns>Returns the datetime in <see cref="T:System.DateTime"/> format.</returns>
        </member>
        <member name="T:Aram.OSMParser.Vector3GaPS">
            <summary>
            A 3d coordinate vector.
            </summary>
            <remarks>Sometimes the orientation of the vector components may be understood differently, ie. 
            z component may point upwards in one system, and downwards in another.
            It is the programmer's responsibility to make the correct assignments.</remarks>
        </member>
        <member name="F:Aram.OSMParser.Vector3GaPS.x">
            <summary>
            value on x axis
            </summary>
        </member>
        <member name="F:Aram.OSMParser.Vector3GaPS.y">
            <summary>
            value on y axis
            </summary>
        </member>
        <member name="F:Aram.OSMParser.Vector3GaPS.z">
            <summary>
            value on z axis
            </summary>
        </member>
        <member name="T:Aram.OSMParser.NamespaceDoc">
            <summary>
            The Aram.OSMParser namespace is a collection of classes that will help retrieve data from the database,
             regarding the OpenStreetMaps elements such as nodes, ways and relations.
            </summary>
            <remarks>Please refer to <a href="http://www.openstreetmap.org/help"> for more information.</a></remarks>
        </member>
        <member name="T:Aram.OSMParser.OSMPostgresqlSource">
            <summary>
            This is the OpenStreetMaps database connection class. It provides methods to retrive information regarding nodes, ways and relation and
            their underlying tags.
            </summary>
        </member>
        <member name="F:Aram.OSMParser.OSMPostgresqlSource.connectionString">
            <summary>
            The connectionString to the database. Please refer to <a href="http://www.npgsql.org">.Net Data Provider for Postgresql</a> for format specifications.
            </summary>
        </member>
        <member name="F:Aram.OSMParser.OSMPostgresqlSource.conn">
            <summary>
            The Postgresql connection.
            </summary>
        </member>
        <member name="F:Aram.OSMParser.OSMPostgresqlSource.scale">
            <summary>
            The scale for the latitude / longitude values over the database.
            <br/><strong>Note:</strong>By default all the geo position values in the database are stored as
            a 9 digit integer number, that should be divided by this number to get the real value.
            <br/><br/>For example: 584111023 becomes 584111023/ 10000000 = 58.4111023
            </summary>
        </member>
        <member name="M:Aram.OSMParser.OSMPostgresqlSource.#ctor(System.String)">
            <summary>
            The constructor of the OSMPostgresqlSource accepting a connection string for initialization.
            </summary>
            <param name="connectionString">The connectionString to the database</param>
        </member>
        <member name="M:Aram.OSMParser.OSMPostgresqlSource.Finalize">
            <summary>
            The destructor of the OSMPostgresqlSource. This will close the opened database connection.
            </summary>
        </member>
        <member name="M:Aram.OSMParser.OSMPostgresqlSource.GetWayIds(System.String)">
            <summary>
            Gets the way ids that match the criteria.
            </summary>
            <param name="SearchQuery">The search query to match against.
            Take a look at Way table in the database for definitions.</param>
            <returns>Returns an array of string way ids.</returns>
        </member>
        <member name="M:Aram.OSMParser.OSMPostgresqlSource.GetWayIdsWithTags(Aram.OSMParser.Bounds,System.String[][])">
            <summary>
            Gets the way ids that match the given tags and the criteria.
            </summary>
            <param name="SearchQuery">The search query to match against.
            Take a look at Way table in the database for definitions.</param>
            <param name="tags">The key-value pair to look for.
            <para>Note: If even one of the tags match, the way is returned.</para>
            </param>
            <returns>Returns an array of string way ids.</returns>
        </member>
        <member name="M:Aram.OSMParser.OSMPostgresqlSource.GetNodeIdsInBoundWithInfo(Aram.OSMParser.Bounds,System.String)">
            <summary>
            Get the node ids in the given bound that have the matching tags.
            </summary>
            <param name="bound">The boundary to search in.</param>
            <param name="infoTag">The tag to match against.</param>
            <returns>Returns an array of string node ids.</returns>
        </member>
        <member name="M:Aram.OSMParser.OSMPostgresqlSource.GetNodeIdsInBoundWithKeyValueTag(Aram.OSMParser.Bounds,System.String[][])">
            <summary>
            Get the node ids in the given bound that have the matching tags pairs.
            </summary>
            <param name="bound">The boundary to search in.</param>
            <param name="infoTag">The tag pairs to match against.
            <para/><strong>Note:</strong> infoTag is a n by 2 array. 
            <para/>example: infoTag= new String[3][];
            <para/>infoTag[0]=new String[] {"bus", "yes"};</param>
            <returns>Returns an array of string node ids.</returns>
        </member>
        <member name="M:Aram.OSMParser.OSMPostgresqlSource.GetWayIdsInStockholm">
            <summary>
            Gets all the way ids in stockholm area. You may implement your own methods to target a specific region.
            </summary>
            <returns>Returns an array of string way ids.</returns>
            <seealso cref="M:Aram.OSMParser.OSMPostgresqlSource.GetWayIds(System.String)"/>
        </member>
        <member name="M:Aram.OSMParser.OSMPostgresqlSource.GetWayExtIdsInBound(Aram.OSMParser.Bounds)">
            <summary>
            Gets the way extended ids in the given boundary. 
            </summary>
            <param name="bound">The boundary of the search.</param>
            <returns>Returns an array of (wayid, original OSM way id) pairs.</returns>
            <remarks>For more details, take a look at wayextnodeinfoaram_cachedfromview view in the database.</remarks>
        </member>
        <member name="M:Aram.OSMParser.OSMPostgresqlSource.GetWayIdsInBound(Aram.OSMParser.Bounds)">
            <summary>
            Gets the way ids within the boundary.
            </summary>
            <param name="bound">The boundary of the search</param>
            <returns>Returns an array of string way ids.</returns>
            <seealso cref="M:Aram.OSMParser.OSMPostgresqlSource.GetWayIds(System.String)"/>
        </member>
        <member name="P:Aram.OSMParser.OSMPostgresqlSource.Bounds">
            <summary>
            Gets the geo boundaries of the available data in the database.
            Note that by default this property is loading the values from viewbounds_stockholm table,
            scales them to real values. You may change this to reflect your own region.
            </summary>
            <seealso cref="F:Aram.OSMParser.OSMPostgresqlSource.scale"/>
        </member>
        <member name="P:Aram.OSMParser.OSMPostgresqlSource.RelationIds">
            <summary>
            Gets all the relations ids in the database.
            Warning: It may be a exhaustive operation. Use more finegrained methods to retrieve the ids.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.OSMPostgresqlSource.WayIds">
            <summary>
            Gets all the way ids in the database.
            Note: It may be a exhaustive operation. Use more finegrained methods to retrieve the ids.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.OSMPostgresqlSource.Ways">
            <summary>
            Gets the <see cref="T:Npgsql.NpgsqlDataReader"/> to all the ways in the database.
            For more details, take a look at WayNodeInfoAram_cachedFromView view in the database.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.OSMPostgresqlSource.Nodes">
            <summary>
            Gets the <see cref="T:Npgsql.NpgsqlDataReader"/> to all the nodes in Stockholm in the database.
            For more details, take a look at node_stockholm table in the database.
            </summary>
        </member>
        <member name="T:Aram.OSMParser.Member">
            <summary>
            Defines an OpenstreetMaps Relation member. Refer to OpenstreetMaps wiki for more.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Member.RelationId">
            <summary>
            Gets or sets the relation id.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Member.ReferenceId">
            <summary>
            Gets or sets the referenced element id.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Member.Type">
            <summary>
            0 for Node, 1 for Way, 2 for Relation
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Member.Role">
            <summary>
            Gets or sets the role of this member in the relation.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Member.order">
            <summary>
            Gets or sets the order of the member in the relation.
            </summary>
        </member>
        <member name="M:Aram.OSMParser.Relation.GetRoutePath(System.String,System.Int32,System.String)">
            <summary>
            TODO
            </summary>
            <param name="routeId"></param>
            <param name="memberType"></param>
            <param name="connectionString"></param>
            <returns>Return a list of nodes</returns>
        </member>
        <member name="M:Aram.OSMParser.Relation.GetRelationsPostgreSQL(System.String[],System.Int32,System.String,System.String)">
            <summary>
            TODO
            </summary>
            <param name="memberIds"></param>
            <param name="memberType"></param>
            <param name="memberRole"></param>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="T:Aram.OSMParser.GeoPosition">
            <summary>
            A GeoPosition class that defines a point in latitude/longitude format.
            </summary>
            <seealso cref="T:Aram.OSMParser.Bounds"/>
        </member>
        <member name="M:Aram.OSMParser.GeoPosition.#ctor">
            <summary>
            The default constructor of <see cref="T:Aram.OSMParser.GeoPosition"/>.
            </summary>
        </member>
        <member name="M:Aram.OSMParser.GeoPosition.#ctor(System.String,System.String)">
            <summary>
            Initializes the class with latitude and longitude values that are parsed from strings.
            </summary>
            <param name="Lat">The latitude value</param>
            <param name="Lon">The longitude value</param>
        </member>
        <member name="M:Aram.OSMParser.GeoPosition.#ctor(System.Double,System.Double)">
            <summary>
            Initializes the class with latitude and longitude values.
            </summary>
            <param name="Lat">The latitude value</param>
            <param name="Lon">The longitude value</param>
        </member>
        <member name="P:Aram.OSMParser.GeoPosition.Lat">
            <summary>
            Gets or set the latitude.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.GeoPosition.Lon">
            <summary>
            Gets or set the longitude.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.GeoPosition.Alt">
            <summary>
            Gets or set the altitude. Note: pending development.
            </summary>
        </member>
        <member name="T:Aram.OSMParser.OsmNode">
            <summary>
            A class that represents an Openstreetmaps node element.
            </summary>
            <remarks>The method names with the letters "Ext" in their names refer to the generated tables that represent
            a road network traffic. This is different from the original way database of OSM. You may use these particular methods
            to retrieve data for traffic operations such as routing.</remarks>
        </member>
        <member name="F:Aram.OSMParser.OsmNode.scale">
            <summary>
            The scale for the latitude / longitude values over the database.
            <br/><strong>Note:</strong>By default all the geo position values in the database are stored as
            a 9 digit integer number, that should be divided by this number to get the real value.
            <br/><br/>For example: 584111023 becomes 584111023/ 10000000 = 58.4111023
            </summary>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.#ctor">
            <summary>
            The default constructor for OsmNode
            </summary>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes the classes with the given OSM xml element.
            </summary>
            <param name="node">The xml element</param>
        </member>
        <member name="F:Aram.OSMParser.OsmNode.id">
            <summary>
            The OSM id of the node
            </summary>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.GetPositionPostgreSQL(System.String)">
            <summary>
            Gets the geoposition in the postgresql database. To be used with way GetNodesPostgreSQL() method.
            </summary>
            <param name="connectionString">The connection string to the Postgresql database. Please refer to <a href="http://www.openstreetmap.org/help">OSM Help</a> for more information.</param>
            <returns>Returns the position of the node.</returns>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.GetPositionSQL(System.String)">
            <summary>
            Gets the position in the MSSQL databaes.
            </summary>
            <param name="connectionString">The connection string to the MSSQL database.</param>
            <returns>Returns the position of the node.</returns>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.GetPositionPostgreSQL(System.String,System.String)">
            <summary>
            Gets the geoposition of a given node in the postgresql database. To be used with way GetNodesPostgreSQL() method.
            </summary>
            <param name="nodeId">The id of the node</param>
            <param name="connectionString">The connection string to the Postgresql database. Please refer to <a href="http://www.openstreetmap.org/help">OSM Help</a> for more information.</param>
            <returns>Returns the position of the node.</returns>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.GetPositionSQL(System.String,System.String)">
            <summary>
            Gets the geoposition of a given node in the MSSQL database. To be used with way GetNodesPostgreSQL() method.
            </summary>
            <param name="nodeId">The id of the node</param>
            <param name="connectionString">The connection string to the MSSQL database.</param>
            <returns>Returns the position of the node.</returns>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.GetTagsPostgreSQL(System.String)">
            <summary>
            Gets all the tags for this node.
            </summary>
            <param name="connectionString">The connection string to the Postgresql database. Please refer to <a href="http://www.openstreetmap.org/help">OSM Help</a> for more information.</param>
            <returns></returns>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.GetTagsPostgreSQL(System.String,System.String)">
            <summary>
            Gets a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for the given node id from the database.
            </summary>
            <param name="nodeId">The id of the node to look for</param>
            <param name="connectionString">The connection string to the Postgresql database. Please refer to <a href="http://www.openstreetmap.org/help">OSM Help</a> for more information.</param>
            <returns>Returns a list of <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.GetTagsSQL(System.String)">
            <summary>
            Gets a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for the this node  from the database.
            </summary>
            <param name="connectionString">The connection string to the MSSQL database. </param>
            <returns>Returns a list of <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.OsmNode.GetTagsSQL(System.String,System.String)">
            <summary>
            Gets a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for the given node id from the database.
            </summary>
            <param name="nodeId">The node id to look for</param>
            <param name="connectionString">The connection string to the Postgresql database. Please refer to <a href="http://www.openstreetmap.org/help">OSM Help</a> for more information.</param>
            <returns>Returns a list of <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="P:Aram.OSMParser.OsmNode.OsmElement">
            <summary>
            Gets or sets the OSM xml element that represents the node.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.OsmNode.order">
            <summary>
            Gets or sets the order of the node.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.OsmNode.PositionSQL">
            <summary>
            The geoposition in the MSSQL database.
            Warning : only works when populated with GetNodesSQL() method of Way. Otherwise, use GetPositionSQL() Method.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.OsmNode.PositionPostgreSQL">
            <summary>
            Gets or sets the geoposition in the postgresql database. To be used with way GetNodesPostgreSQL() method.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.OsmNode.Position">
            <summary>
            Gets the <see cref="T:Aram.OSMParser.GeoPosition"/> of the current node from OSM xml element.
            <strong>Note:</strong> This retrieves the data from the xml elements. Do not use this if you are getting the data from the database.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.OsmNode.Tags">
            <summary>
            Gets the list of <see cref="T:Aram.OSMParser.Tag"/>s of the current node from OSM xml element.
            <strong>Note:</strong> This retrieves the data from the xml elements. Do not use this if you are getting the data from the database.
            </summary>
        </member>
        <member name="T:Aram.OSMParser.Tag">
            <summary>
            The class that represents a Openstreetmap tag element.
            Please refer to <a href="http://www.openstreetmap.org/help">OSM Help</a> for more information.
            </summary>
        </member>
        <member name="M:Aram.OSMParser.Tag.#ctor">
            <summary>
            The default constructor of the Tag
            </summary>
        </member>
        <member name="M:Aram.OSMParser.Tag.#ctor(System.Xml.Linq.XElement)">
            <summary>
            The constructor that sets the <see cref="P:Aram.OSMParser.Tag.OsmElement"/>.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="P:Aram.OSMParser.Tag.OsmElement">
            <summary>
            Gets or sets the OSM xml element of the tag.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Tag.KeyValueSQL">
            <summary>
            Gets or sets an array of key-value pair.
            The index 0 is the key, the index 1 is the value.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Tag.Key">
            <summary>
            Gets the key name of the tag from the OSM xml element.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Tag.Value">
            <summary>
            Gets the value of the tag from the OSM xml element.
            </summary>
        </member>
        <member name="T:Aram.OSMParser.Way">
            <summary>
            The <see cref="T:Aram.OSMParser.Way"/> class is a parser for OpenStreetMap standard xml data, as well as the GaPSLabs interface for
            the specific data structure that is stored in the PostgreSQL DBMS.
            </summary>
            <remarks>The method names with the letters "Ext" in their names refer to the generated tables that represent
            a road network traffic. This is different from the original way database of OSM. You may use these particular methods
            to retrieve data for traffic operations such as routing.</remarks>
        </member>
        <member name="F:Aram.OSMParser.Way.scale">
            <summary>
            The scale for the latitude / longitude values over the database.
            <br/><strong>Note:</strong>By default all the geo position values in the database are stored as
            a 9 digit integer number, that should be divided by this number to get the real value.
            <br/><br/>For example: 584111023 becomes 584111023/ 10000000 = 58.4111023
            </summary>
        </member>
        <member name="M:Aram.OSMParser.Way.#ctor">
            <summary>
            The default constructor for Way
            </summary>
        </member>
        <member name="M:Aram.OSMParser.Way.#ctor(System.String)">
            <summary>
            The constructor that sets the OSM <see cref="P:Aram.OSMParser.Way.id"/> of the way.
            </summary>
            <param name="id">OSM id of way</param>
        </member>
        <member name="M:Aram.OSMParser.Way.#ctor(System.Xml.Linq.XElement)">
            <summary>
            The constructor that sets the <see cref="P:Aram.OSMParser.Way.OsmElement"/> of the way.
            </summary>
            <param name="way">The OSM xml element for the way</param>
        </member>
        <member name="M:Aram.OSMParser.Way.#ctor(System.Xml.Linq.XElement,System.Xml.Linq.XDocument)">
            <summary>
            The constructor that sets the <see cref="P:Aram.OSMParser.Way.OsmElement"/> and <see cref="P:Aram.OSMParser.Way.Root"/> of the way.
            </summary>
            <param name="way">The OSM xml element for the way</param>
            <param name="Root">The root of the xml stream that contains OSM elements</param>
        </member>
        <member name="M:Aram.OSMParser.Way.GetNodesPostgreSQL(System.String)">
            <summary>
            Gets the list of <see cref="T:Aram.OSMParser.OsmNode"/> elements for this way from the original OSM data on the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for MSSQL for format specifications</param>
            <returns>Returns a list of <see cref="T:Aram.OSMParser.OsmNode"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetNodesFromExtPostgreSQL(System.String)">
            <summary>
            Gets the list of <see cref="T:Aram.OSMParser.OsmNode"/> for this way from the wayextnodeinfoaram_cachedfromview view in the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of <see cref="T:Aram.OSMParser.OsmNode"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetNodesFromExtPostgreSQL(System.String,System.String)">
            <summary>
            Gets the list of <see cref="T:Aram.OSMParser.OsmNode"/> for this way from the wayextnodeinfoaram_cachedfromview view in the PostgreSql database.
            </summary>
            <param name="wayId">The way id to look for</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of <see cref="T:Aram.OSMParser.OsmNode"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetNodesPostgreSQL(System.String,System.String)">
            <summary>
            Gets the list of <see cref="T:Aram.OSMParser.OsmNode"/> elements for the given way id from the original OSM data on the database.
            </summary>
            <param name="wayId">The way id to look for</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for PostgreSql for format specifications</param>
            <returns>Returns a list of <see cref="T:Aram.OSMParser.OsmNode"/>s that is ordered node sequence.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetNodesSQL(System.String)">
            <summary>
            Gets the list of <see cref="T:Aram.OSMParser.OsmNode"/> elements for this way from the original OSM data on the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for MSSQL for format specifications</param>
            <returns>Returns a list of <see cref="T:Aram.OSMParser.OsmNode"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetNodesSQL(System.String,System.String)">
            <summary>
            Gets the list of <see cref="T:Aram.OSMParser.OsmNode"/> elements for the given way id from the original OSM data on the database.
            </summary>
            <param name="wayId">The way id to look for</param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of <see cref="T:Aram.OSMParser.OsmNode"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetTagsPostgreSQL(System.String)">
            <summary>
            Gets the list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for this way from the original OSM database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetTagsExtPostgreSQL(System.String,System.String)">
            <summary>
            Gets the list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for the given original OSM way id from the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="OriginalWayId">The original OSM way id</param>
            <returns>Returns a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetTagsExtStockholmPostgreSQL(System.String,System.String)">
            <summary>
            Gets the list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for the given original OSM way id from the database for the area of Stockholm.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="OriginalWayId">The original OSM way id</param>
            <returns>Returns a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetTagsStockholmPostgreSQL(System.String)">
            <summary>
            Gets the list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for this way (should be an original way of the OSM) from the database for the area of Stockholm.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetTagsStockholmPostgreSQL(System.String,System.String)">
            <summary>
            Gets the list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for the given original OSM way id from the database for the area of Stockholm.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="wayId">The original OSM way id</param>
            <returns>Returns a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetTagsPostgreSQL(System.String,System.String)">
            <summary>
            Gets the list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for the given original OSM way id from the database for the area of Stockholm.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <param name="wayId">The original OSM way id</param>
            <returns>Returns a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetTagsSQL(System.String)">
            <summary>
            Gets the list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for this way from the database.
            </summary>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="M:Aram.OSMParser.Way.GetTagsSQL(System.String,System.String)">
            <summary>
            Gets the list of OSM <see cref="T:Aram.OSMParser.Tag"/>s for the given way id from the database.
            </summary>
            <param name="wayId"></param>
            <param name="connectionString">The connectionString to the database. Please refer to .Net Data Provider for Postgresql for format specifications</param>
            <returns>Returns a list of OSM <see cref="T:Aram.OSMParser.Tag"/>s.</returns>
        </member>
        <member name="P:Aram.OSMParser.Way.OsmElement">
            <summary>
            Gets or sets the OSM xml element that represents the way.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Way.Root">
            <summary>
            Gets or sets the root of the xml stream that contains OSM elements.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Way.id">
            <summary>
            Gets or sets the OSM id of the way.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Way.Nodes">
            <summary>
            Gets a list of <see cref="T:Aram.OSMParser.OsmNode"/> elements for this way.
            <strong>Note:</strong> This retrieves the data from the xml elements. Do not use this if you are getting the data from the database.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Way.NodesRaw">
            <summary>
            Gets a raw string of OSM xml nodes that belong to this way.
            <strong>Note:</strong> This retrieves the data from the xml elements. Do not use this if you are getting the data from the database.
            </summary>
        </member>
        <member name="P:Aram.OSMParser.Way.Tags">
            <summary>
            Gets the list of <see cref="T:Aram.OSMParser.Tag"/>s from the OSM xml element.
            </summary>
            <strong>Note:</strong> This retrieves the data from the xml elements. Do not use this if you are getting the data from the database.
        </member>
    </members>
</doc>
